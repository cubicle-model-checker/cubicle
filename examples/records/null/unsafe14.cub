type t = A | B | C

type r = { a: t; b : bool }

var X : r
var Y : t

init() { X <> NULL && Y = C && X = {a = C ; b = True}}

unsafe() { X = { a = C; b = True}}

transition t()
requires { X = NULL}
{ Y := B }

transition t2()
requires { Y = B }
{ X := {a = C; b = True} }

