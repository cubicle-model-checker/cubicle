(* Should return unsafe init -> t3 -> unsafe *)

type t = A | B | C | D
type r = {f: int; u: t}
type k = { g: int; e: r}
type j = { v: int; b: k}
type et = L | V
var X : int
var T : k
var Y : r
var Z: int
var H : j

array R[proc] : j

(*
init (i) { X = 3 &&R[i] = { v = 2; b = {g = 2; e = {f = 1; u = D}}} }
unsafe(i) { R[i] = {v= 2; b = { g = 2; e = {f = 1; u = D}}} }*)

init() { X = 3 && Y = { f = 2; u = B } }
unsafe () { X = 4 && Y = { f = 3; u = A }}

transition t1()
requires { X = 4 }
{
Y := { f = 2; u = D };
X := 4
}

transition t2()
requires { Y = { f = 2; u = A}}
{
Y := { f = 3; u = A}
}

transition t3()
{
X := 4;
Y := { f = 3; u = A}
}