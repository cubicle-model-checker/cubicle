var Turn : proc
var Req : bool
array Want[proc] : bool
array Crit[proc] : bool

var Deadlock : bool

init (z) { Want[z] = False && Crit[z] = False && Req = False && Deadlock = False  }

unsafe (z1 z2) { Crit[z1] = True && Crit[z2] = True }

unsafe (i) { Deadlock = True }

transition req (i)
requires { Want[i] = False && Req = False }
{ Want[i] := True; Req := True  }

transition enter (i)
requires { Want[i]=True && Crit[i] = False && Turn = i}
{ Crit[i] := True;  }

transition exit (i)
requires { Crit[i] = True }
{ 
  Turn := . ;
  Crit[i] := False;
  Want[i] := False
}

(*
transition deadlock(i)
requires { Req = True && Want[i] = False && forall_other j. Want[i] = False }
{ Deadlock := True }*)
