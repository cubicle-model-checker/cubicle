type t = A | B 

array L[proc] : t

array T[proc] : lock

var G : lock

init(i) {L[i] = A }


unsafe(i j) { L[i] = B && L[j] = B }


transition t1(i)
{ acquire(T[i]) }

transition t2(i)
{ L[j] := case | _ : B }

transition t3(i)
{ release(T[i]) }