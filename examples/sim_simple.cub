type t = A | B
var X : t
var Y : t
var Z : int
var E : proc
var F : bool
array Hello[proc]		: t
array Bonjour[proc]	: t

init () { X = A && Z = 2 }

transition t1 (i j) 
requires { X = A }
{ 
	X := B;
	Y := A;
	E := i;
	Hello[j] := A;
	Bonjour[i] := B
}

transition t2 (i)
requires { X = B && Z = 2 }
{ 
	X := A;
	Y := ?

}
