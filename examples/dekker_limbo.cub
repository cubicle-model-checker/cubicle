type loc = L1 | L2 | L3 | Limbo
var Turn : proc
array PC[proc] : loc

init (z) { PC[z] = L1 }

unsafe (z1 z2) { PC[z1] = L3 && PC[z2] = L3 }

transition req (i)
requires { PC[i] = L1 }
{ 
 PC[j] := case
     | i=j : L2 
	   | _ : PC[j] 
}

transition limbo (i)
requires { PC[i]=L2 }
{ 
 PC[j] := case 
     | i=j : Limbo 
	   | _ : PC[j]
}
 

transition enter (i)
requires { PC[i]=Limbo  && Turn = i}
{ 
 PC[j] := case
     | i=j : L3 
	   | _ : PC[j]
}

transition exit (i)
requires { PC[i] = L3}
{ 
  Turn := . ;
  PC[j] := case 
      | i=j : L1 
	    | _ : PC[j] 
}



