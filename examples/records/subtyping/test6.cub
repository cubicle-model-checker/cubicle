(*
subtyping:

-nosubtyping
Number of visited nodes          : 1
Fixpoints                        : 1
Number of solver calls           : 1

*)

type t = A | B | C | D | E

type r = { a: t; b : t ; c : bool }

var X : r
var Y : t

init() { (*X.a = B && X.b = D*) X = { a = B ; b = D; c = True }(* X.b = A*)}

unsafe() { X.a = A }

transition t1()
{ X := { a = D; b = E; c = True }}

